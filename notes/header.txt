// Import product library
import { bullionProducts } from "../javascript/products.js";
console.log("Product Library Imported");

// Function to update website pricing each time the user loads the webpage
export function updateStorePricing() {
  // This ensures the HTML page is fully loaded before the functions begin to access any elements, preventing errors from occurring
  document.addEventListener("DOMContentLoaded", () => {
    // Function to clean and parse spot prices
    function cleanPrice(priceText) {
      return parseFloat(priceText.replace(/[,$]/g, ""));
    }

    // Function to calculate product price if metal = gold
    function calculateGoldPrice(weight, premium) {
      return (goldSpot + premium) * weight;
    }

    // Function to calculate product price if metal = silver
    function calculateSilverPrice(weight, premium) {
      return (silverSpot + premium) * weight;
    }

    // Function to calculate product price if metal = platinum
    function calculatePlatinumPrice(weight, premium) {
      return (platinumSpot + premium) * weight;
    }

    // Function to perform the pricing update
    function performPricingUpdate() {
      // Apply function to spot prices and store values as const variables
      const goldSpotElement = document.getElementById("goldSpotPrice");
      const silverSpotElement = document.getElementById("silverSpotPrice");
      const platinumSpotElement = document.getElementById("platinumSpotPrice");

      if (!goldSpotElement || !silverSpotElement || !platinumSpotElement) {
        console.error("Spot price elements not found");
        return;
      }

      const goldSpot = cleanPrice(goldSpotElement.textContent);
      const silverSpot = cleanPrice(silverSpotElement.textContent);
      const platinumSpot = cleanPrice(platinumSpotElement.textContent);

      // Iterate through the product array and find matches
      bullionProducts.forEach((product) => {
        const productElement = document.getElementById(product.id);

        if (productElement) {
          const name = product.name;
          const metal = product.metal;
          const weight = product.weight;
          const premium = product.premium || 0; // Default premium to 0 if not defined

          // Calculate the product price
          let price;
          switch (metal) {
            case "Gold":
              price = calculateGoldPrice(weight, premium).toFixed(2);
              break;
            case "Silver":
              price = calculateSilverPrice(weight, premium).toFixed(2);
              break;
            case "Platinum":
              price = calculatePlatinumPrice(weight, premium).toFixed(2);
              break;
            default:
              console.error("Invalid metal type");
              return;
          }

          // Update HTML elements using the new variables
          // Update Price
          const priceValueElement = productElement.querySelector(".price-value");
          if (priceValueElement) {
            priceValueElement.textContent = `$${price}`;
          }

          // Update Name
          const nameValueElement = productElement.querySelector(".card-title");
          if (nameValueElement) {
            nameValueElement.textContent = name;
          }
        }
      });
    }

    // Perform initial pricing update
    performPricingUpdate();

    // Set up interval to update pricing every 15 minutes (900,000 milliseconds)
    const updateInterval = 15 * 60 * 1000;
    setInterval(performPricingUpdate, updateInterval);

    // Check for visibility change to update pricing when user returns to the page
    document.addEventListener("visibilitychange", () => {
      if (document.visibilityState === "visible") {
        performPricingUpdate();
      }
    });
  });
}

// Call the function once user loads the webpage
updateStorePricing();
